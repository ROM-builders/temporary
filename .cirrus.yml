env:
    CIRRUS_CLONE_DEPTH: 1
    BUILD_HOSTNAME: "cirrus-ci.org"
    bot_api: "ENCRYPTED[b16032643ad0994cda4822c9d477956f434278d0f786f8e131b585aa4f8510a11f3cd9f6a66a63568d2cba1c4dde25b4]"

task:
  name: Test
  skip: $CIRRUS_BRANCH == 'main'
  only_if: $CIRRUS_REPO_OWNER == 'ROM-builders'
  timeout_in: 2m
  persistent_worker:
    labels:
      name: AX61-2
    isolation:
      container:
        image: apon77/aosp:cirrus
        cpu: 2
        memory: 4G

  env_script:
    - env
  show_script:
    - cat $CIRRUS_WORKING_DIR/build_rom.sh
  notify_script:
    - rom_name=$(grep init $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)
    - branch_name=$(grep init $CIRRUS_WORKING_DIR/build_rom.sh | awk -F "-b " '{print $2}' | awk '{print $1}')

    - for item in "LineageOS lineage-17.1" "LineageOS lineage-15.1" "LineageOS lineage-19.0" "ArrowOS arrow-12.0" "Project-Fluid fluid-12" "CipherOS twelve" "ProjectRadiant twelve" "Project-Awaken 12" "Octavi-OS 12" "Project-LegionOS 12" "ShapeShiftOS android_12" "lighthouse-os sailboat" "Evolution-X snow" "PotatoProject frico-release" "StyxProject S" "PixelExperience twelve" "CherishOS twelve" "Spark-Rom spark" "PixelExtended snow" "Corvus-R 12" "crdroidandroid 12.0" "AospExtended 12.x"

    - do
    - item1=$(echo $item | awk -F ' ' '{print $1}')
    - item2=$(echo $item | awk -F ' ' '{print $2}')
    - if [[ $rom_name == $item1 ]]; then if [[ $branch_name == $item2 ]]; then rom_name=$rom_name-$branch_name; fi ;fi
    - done

    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - grep _jasmine_sprout $CIRRUS_WORKING_DIR/build_rom.sh > /dev/null && device=jasmine_sprout
    - your_telegram_id=@ROM_builders_junk
    - show=$(cat $CIRRUS_WORKING_DIR/build_rom.sh)
    - curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" -d "text=<code>$device-$rom_name</code> Started
      
      https://cirrus-ci.com/build/$CIRRUS_BUILD_ID
      
      $show" -d "chat_id=${your_telegram_id}" -d "parse_mode=HTML"
  test_script:
    - set -e
    - curl -Ls https://github.com/ROM-builders/temporary/raw/main/test.sh | bash

task:
  name: Build
  persistent_worker: {}
  timeout_in: 4h
  env:
    USE_CCACHE: 1
    ROM_NAME: "grep init sync_rom.sh | cut -d / -f 4"
    PATH: "~/bin:$PATH"
  sync_script:
    - mkdir -p ~/$(bash -c "$ROM_NAME")
    - cd ~/$(bash -c "$ROM_NAME")
    - rm -rf .repo/local_manifests
    - bash $CIRRUS_WORKING_DIR/sync_rom.sh
  build_script:
    - ccache -z
    - cd ~/$(bash -c "$ROM_NAME")
    - bash $CIRRUS_WORKING_DIR/build_rom.sh
  ccache_stats_script:
    - ccache -s
  upload_script:
    - cd ~/$(bash -c "$ROM_NAME")
    - bash $CIRRUS_WORKING_DIR/upload_rom.sh
  remove_script:
    - cd ~/$(bash -c "$ROM_NAME")
    - rm -rf .repo/local_manifests
    - rm -rf out/target/product/$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh | cut -d _ -f 2 | cut -d - -f 1)/*.zip
