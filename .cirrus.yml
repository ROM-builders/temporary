env:
    CIRRUS_CLONE_DEPTH: 1
task:
  name: Build
  timeout_in: 4h
  only_if: $CIRRUS_REPO_OWNER == 'ROM-builders'
  persistent_worker:
    isolation:
      container:
        image: apon77/aosp:cirrus
        cpu: 24
        memory: 60g
        volumes:
          - /home/cirrus/roms:/home/cirrus/roms
          - /home/cirrus/.config:/home/cirrus/.config
  sync_script:
    - set -exv

    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - rom_name=$(grep init $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)
    - username=$(grep 'git clone' $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)

    - mkdir -p ~/roms/$device-$rom_name-$username
    - cd ~/roms/$device-$rom_name-$username
    - rm -rf .repo/local_manifests
    - find -name shallow.lock -delete
    - command=$(head $CIRRUS_WORKING_DIR/build_rom.sh -n $(expr $(grep build/ $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1))
    - bash -c "$command"
  build_script:
    - set -exv

    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - rom_name=$(grep init $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)
    - username=$(grep 'git clone' $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)

    - cd ~/roms/$device-$rom_name-$username
    - export CCACHE_DIR=~/roms/$device-$rom_name-$username/ccache
    - export CCACHE_EXEC=$(which ccache)
    - export USE_CCACHE=1
    - ccache -M 10G
    - ccache -z
    - command=$(tail $CIRRUS_WORKING_DIR/build_rom.sh -n +$(expr $(grep build/ $CIRRUS_WORKING_DIR/build_rom.sh -n | cut -f1 -d:) - 1)| head -n -1)
    - bash -c "$command"
  ccache_stats_script:
    - set -exv
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - rom_name=$(grep init $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)
    - username=$(grep 'git clone' $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d / -f 4)

    - export CCACHE_DIR=~/roms/$device-$rom_name-$username/ccache
    - ccache -s
  upload_script:
    - set -exv
    - cd ~/roms/$(bash -c "$ROM_NAME")
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - engzip=$(ls out/target/product/$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d _ -f 2 | cut -d - -f 1)/*eng*.zip || true )
    - otazip=$(ls out/target/product/$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d _ -f 2 | cut -d - -f 1)/*-ota-*.zip || true )
    - rm -rf $engzip $otazip
    - dlink=$(basename out/target/product/$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d _ -f 2 | cut -d - -f 1)/*.zip)
    - command=$(grep 'rclone copy' $CIRRUS_WORKING_DIR/build_rom.sh)
    - bash -c "$command"
    - echo "Downlod link https://roms.cirrus-ci.workers.dev/0:/$device/$dlink"
  remove_script:
    - set -exv
    - cd ~/roms/$(bash -c "$ROM_NAME")
    - device=$(grep unch $CIRRUS_WORKING_DIR/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
    - rm -rf out/target/product/$device
