# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dotOS

pool:
  vmImage: ubuntu-latest

steps:
- script:
    apt install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
    mkdir dotOS
    cd dotOS
    curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
    chmod a+x ~/bin/repo
    PATH="$HOME/bin:$PATH"
    export USE_CCACHE=1
    export CCACHE_EXEC=/usr/bin/ccache
    ccache -M 50G
    ccache -o compression=true
    repo init -u git://github.com/DotOS/manifest.git -b dot11
    repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
    source build/envsetup.sh
    lunch dot_fajita-user
    make bacon
  displayName: 'Build Droid On Time'
  artifacts: dotOS/out/target/product/fajita/dotOS*